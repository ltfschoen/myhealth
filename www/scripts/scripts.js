"use strict";angular.module("config",[]).constant("ENV",{name:"production",apiEndpoint:"http://api.yoursite.com/"}),function(){var a=angular.module("Myhealth",["ionic","config","ngRoute","ngResource","Myhealth.services","Myhealth.controllers","Myhealth.directives"]);a.run(["$ionicPlatform",function(a){a.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),window.StatusBar&&StatusBar.styleDefault()})}])}(),function(){var a=angular.module("Myhealth.controllers",[]);a.controller("MapCtrl",["$scope","$ionicLoading","GoogleMapsAPI",function(a,b,c){a.googleMapsAPI=c.query(),console.log(a.googleMapsAPI),a.visiblePano=!0,a.panoValue="Hide",a.togglePano=function(b){console.log("togglePano method called"),console.log("data is: "+b),a.visiblePano=!a.visiblePano,1==b?(a.visiblePano=!0,console.log("Broadcasting to child directive that Panorama view has loaded"),a.$broadcast("loadedPano",!0),a.panoValue="Hide"):a.panoValue=1==a.visiblePano?"Hide":"Show"},a.$on("togglePanoEvent",function(b,c){console.log("togglePanoEvent data sent to parent MapCtrl is: "+c),a.togglePano(c)}),a.mapCreated=function(b){console.log("Myhealth.controllers - mapCreated method called"),a.map=b},a.centerOnMe=function(){console.log("Myhealth.controllers - centerOnMe method called"),console.log("Centering"),a.map&&(b.show({content:"Getting current location...",showBackdrop:!1}),navigator.geolocation.getCurrentPosition(function(c){console.log("Myhealth.controllers - getCurrentPosition method called"),console.log("Got position: ",c),a.map.setCenter(new google.maps.LatLng(c.coords.latitude,c.coords.longitude)),b.hide()},function(a){alert("Unable to get location: "+a.message)}))}}])}(),function(){var a=angular.module("Myhealth.directives",[]);a.directive("map",function(){return{restrict:"E",scope:{onCreate:"&"},link:function(a,b){function c(){console.log("Myhealth.directives - initialize method called");var c=b[0],d=new google.maps.LatLng(-36.43,148.323,!0),e={center:d,zoom:13,noClear:!0,backgroundColor:"#eeeeee",mapTypeId:google.maps.MapTypeId.ROADMAP,keyboardShortcuts:!0,disableDoubleClickZoom:!1,draggable:!0,scrollwheel:!0,streetViewControl:!0,disableDefaultUI:!1,mapTypeControl:!0,mapTypeControlOptions:{style:google.maps.MapTypeControlStyle.DROPDOWN_MENU,position:google.maps.ControlPosition.TOP_LEFT,mapTypeIds:[google.maps.MapTypeId.ROADMAP,google.maps.MapTypeId.SATELLITE,google.maps.MapTypeId.TERRAIN]},navigationControl:!0,navigationControlOptions:{position:google.maps.ControlPosition.TOP_LEFT,style:google.maps.NavigationControlStyle.SMALL},scaleControl:!0,scaleControlOptions:{position:google.maps.ControlPosition.TOP,style:google.maps.ScaleControlStyle.SMALL}},f=new google.maps.Map(c,e);a.onCreate({map:f});var g=(google.maps.event.addListenerOnce(f,"bounds_changed",function(){f.getBounds();console.log("Myhealth.directives - map bounds initialized")}),new google.maps.Marker({position:new google.maps.LatLng(-36.43,148.323),icon:"../images/star_health_high.png",shadow:"../images/star_health_high_shadow.png",title:"Star"})),h=new google.maps.Marker({position:new google.maps.LatLng(-36.428,148.313),icon:"../images/ladybird_icon_high.png",shadow:"../images/ladybird_icon_high_shadow.png",title:"Ladybird"}),i=new google.maps.InfoWindow({content:"Warning: Alpine ladybird beetle territory"}),j='<div id="ladybird-info"><img src="../images/ladybird.jpg" alt=""><h3>Ladybird</h3><p><a href="http://www.ento.csiro.au/biology/ladybirds/imageGallery.php?pageNo=3" target="_new">Harmonia Conformis</a></p><video src="../images/ladybird.mp4" controls="controls" autoplay="autoplay"></div>',k=new google.maps.InfoWindow({content:"Cross country skiing area"}),l=(google.maps.event.addDomListener(i,"closeclick",function(){console.log("Myhealth.directives - close infoWindowLadyBird clicked"),i.close(f,i);var a=g.getPosition();return console.log("InfoWindowLadyBird Closed is at PositionClicked: "+a),!1}),google.maps.event.addDomListener(k,"mouseout",function(){console.log("Myhealth.directives - close infoWindowCrossCountry mouseout"),k.close(f,k);var a=m.getPosition();return console.log("InfoWindowCrossCountry Closed is at PositionMouseOut: "+a),!1}),[new google.maps.LatLng(-36.4317,148.3286),new google.maps.LatLng(-36.43,148.312),new google.maps.LatLng(-36.41,148.2913)]),m=new google.maps.Polygon({path:l,strokeColor:"#ff44dd",strokeWeight:10,strokeOpacity:.5,fillColor:"#ff9999",fillOpacity:.3,map:f});g.setMap(f),h.setMap(f);google.maps.event.addDomListener(h,"click",function(){i.setContent(j),i.open(f,h);var a=h.getPosition();return console.log("markerLadybird PositionClicked is: "+a),f.setOptions({zoom:10}),!1}),google.maps.event.addDomListener(g,"click",function(){return console.log("Myhealth.directives - click marker method called"),a.$emit("togglePanoEvent",!0),a.$on("loadedPano",function(a,b){console.log("loadedPanoEvent msg sent to child directive is: "+b);var c=g.getPosition();console.log("Marker PositionClicked is: "+c);var d=new google.maps.StreetViewPanorama(document.getElementById("streetview"));d.registerPanoProvider(function(a){return{location:{pano:a,description:"Mount Carruthers"},links:[],copyright:"Imagery Â© 2014 Luke Schoen",tiles:{tileSize:new google.maps.Size(512,512),worldSize:new google.maps.Size(1500,750),originHeading:0,getTileUrl:function(a,b,c,d){return"../images/happy_campers_"+a+"_"+b+"_"+c+"_"+d+".jpg"}}}}),d.setPano("panorama")}),!1}),google.maps.event.addDomListener(m,"click",function(a){console.log("Myhealth.directives - click polygon method called");var b=document.createElement("div");b.style.width="200px",b.style.height="200px",document.getElementsByTagName("map")[0].appendChild(b);var c=a.latLng;console.log("Polygon PositionMouseOver is: "+c);{var d={zoom:14,center:c,mapTypeId:f.getMapTypeId(),disableDefaultUI:!0},e=new google.maps.Map(b,d);new google.maps.Marker({position:c,map:e,clickable:!0})}return k||(k=new google.maps.InfoWindow),k.setContent(b),k.open(f,m),!1})}google.maps.event.addDomListener(window,"load",c)}}})}(),function(){var a=angular.module("Myhealth.services",["ngResource"]);a.factory("GoogleMapsAPI",["$resource",function(a){return a("config.json",{},{query:{method:"GET",isArray:!0,cache:!0}})}])}();